name: Build and Release OpenSSL

on:
  workflow_dispatch:


jobs:
  prepare-source:
    name: Clone OpenSSL Source
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Get latest version from Git tags
        id: get-version
        run: |
          version=$(
            git ls-remote --tags https://github.com/openssl/openssl.git |
            awk -F/ '{print $3}' |
            grep -E '^openssl-[0-9]+\.[0-9]+\.[0-9]+[a-z]?$' |
            sed 's/openssl-//' |
            sort -V |
            tail -1
          )
          
          #TODO: delete it
          version="3.4.1"
          echo "Detected the latest OpenSSL version is $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Clone OpenSSL
        run: |
          git clone --branch openssl-${{ steps.get-version.outputs.version }} --depth 1 https://github.com/openssl/openssl.git

      - name: Upload source as artifact
        uses: actions/upload-artifact@v4
        with:
          name: openssl-source
          path: openssl/

  build-windows:
    name: Build OpenSSL for Windows
    needs: prepare-source
    runs-on: windows-2025
    steps:
      - name: Download OpenSSL source
        uses: actions/download-artifact@v4
        with:
          name: openssl-source
          path: openssl

      - uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.38'

      - uses: ilammy/setup-nasm@v1

      - name: Build OpenSSL
        shell: cmd
        run: |
          set InstallDir=%CD%\openssl-install
          
          for /f "tokens=*" %%i in ('"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath') do set InstallDirVS=%%i
          
          call "%InstallDirVS%\VC\Auxiliary\Build\vcvars64.bat"
          cd openssl
          perl Configure VC-WIN64A ^
            --prefix="%InstallDir%" ^
            --openssldir="%InstallDir%\ssl" ^
            no-shared ^
            no-legacy ^
            no-tests
          # use all cores
          set CL=/MP
          nmake
          nmake install

      - name: Archive Windows build
        run: |
          Compress-Archive -Path openssl-install\* -DestinationPath openssl-windows-${{ needs.prepare-source.outputs.version }}.zip

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: openssl-windows-${{ needs.prepare-source.outputs.version }}
          path: openssl-windows-${{ needs.prepare-source.outputs.version }}.zip

  build-ios-arm64:
    name: Build OpenSSL for iOS arm64
    needs: prepare-source
    runs-on: macos-14
    steps:
      - name: Download OpenSSL source
        uses: actions/download-artifact@v4
        with:
          name: openssl-source
          path: openssl

      - name: Install dependencies
        run: |
          brew install perl
      
      # Build for iOS Device (arm64)
      - name: Build OpenSSL for iOS arm64
        run: |
          INSTALL_DIR="$PWD/openssl-install"
          cd openssl
          chmod +x Configure
          ./Configure ios64-cross \
            --prefix="$INSTALL_DIR" \
            --openssldir="$INSTALL_DIR/ssl" \
            no-shared \
            no-legacy \
            no-tests

          make CC="xcrun --sdk iphoneos clang" \
            CFLAGS="-fembed-bitcode -isysroot $(xcrun --sdk iphoneos --show-sdk-path) -arch arm64" \
            CXXFLAGS="-fembed-bitcode -isysroot $(xcrun --sdk iphoneos --show-sdk-path) -arch arm64"
          
          make install
      - name: Archive iOS arm64 build
        run: |
          cd openssl-install
          zip -r ../openssl-ios-arm64-${{ needs.prepare-source.outputs.version }}.zip .
      
      # Upload both artifacts
      - name: Upload arm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: openssl-ios-arm64-${{ needs.prepare-source.outputs.version }}
          path: openssl-ios-arm64-${{ needs.prepare-source.outputs.version }}.zip

  build-ios-x86_64:
    name: Build OpenSSL for iOS x86_64
    needs: prepare-source
    runs-on: macos-13
    steps:
      - name: Download OpenSSL source
        uses: actions/download-artifact@v4
        with:
          name: openssl-source
          path: openssl

      - name: Install dependencies
        run: |
          brew install perl
      
      - name: Build OpenSSL for iOS x86_64 iossimulator
        run: |
          INSTALL_DIR="$PWD/openssl-install"
          cd openssl
          chmod +x Configure
          ./Configure iossimulator-x86_64-xcrun \
            --prefix="$INSTALL_DIR" \
            --openssldir="$INSTALL_DIR/ssl" \
            no-shared \
            no-legacy \
            no-tests
          
          make -j$(sysctl -n hw.ncpu) \
            CC="xcrun --sdk iphonesimulator clang" \
            CFLAGS="-arch x86_64" \
            CXXFLAGS="-arch x86_64"
          
          make install

      - name: Archive iOS x86_64 build
        run: |
          cd openssl-install
          zip -r ../openssl-ios-x86_64-${{ needs.prepare-source.outputs.version }}.zip .

      - name: Upload x86_64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: openssl-ios-x86_64-${{ needs.prepare-source.outputs.version }}
          path: openssl-ios-x86_64-${{ needs.prepare-source.outputs.version }}.zip

          
  publish-release:
    name: Publish Release
    needs: [build-windows, build-ios-x86_64, build-ios-arm64, prepare-source]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: openssl-${{ needs.prepare-source.outputs.version }}
          name: OpenSSL v${{ needs.prepare-source.outputs.version }}
          body: |
            Static OpenSSL builds for:
            - Windows (VC-WIN64A)
            - iOS (arm64)
            
            Configuration:
            - Prefix: openssl-install/
            - OpenSSL dir: ssl/
            - no-shared
            - no-tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: openssl-${{ needs.prepare-source.outputs.version }}
          files: |
            artifacts/openssl-windows-${{ needs.prepare-source.outputs.version }}/openssl-windows-${{ needs.prepare-source.outputs.version }}.zip
            artifacts/openssl-ios-arm64-${{ needs.prepare-source.outputs.version }}/openssl-ios-arm64-${{ needs.prepare-source.outputs.version }}.zip
            artifacts/openssl-ios-x86_64-${{ needs.prepare-source.outputs.version }}/openssl-ios-x86_64-${{ needs.prepare-source.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
