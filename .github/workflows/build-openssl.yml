name: Build and Release OpenSSL

on:
  workflow_dispatch:

jobs:
  get-latest-version:
    name: Get Latest OpenSSL Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Get latest version number
        id: set-version
        run: |
          version=$(git ls-remote --tags https://github.com/openssl/openssl.git \
          | awk -F/ '{print $3}' \
          | grep -E '^openssl-[0-9]+\.[0-9]+\.[0-9]+[a-z]?$' \
          | sed 's/openssl-//' \
          | sort -V \
          | tail -1)
          echo "version=$version"
          echo "version=$version" >> $GITHUB_OUTPUT

  build-windows:
    name: Build OpenSSL for Windows
    needs: get-latest-version
    runs-on: windows-2025

    steps:
      - uses: actions/checkout@v4

      - uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.38'

      - uses: ilammy/setup-nasm@v1

      - name: Clone OpenSSL source
        run: |
          git clone --branch openssl-${{ needs.get-latest-version.outputs.version }} --depth 1 https://github.com/openssl/openssl.git

      - name: List Visual Studio
        run: |
          dir "C:\Program Files (x86)\"
          dir "C:\Program Files (x86)\Microsoft Visual Studio\"
          dir "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\"
        shell: cmd

      - name: Build OpenSSL
        run: |
          cd openssl
          perl Configure VC-WIN64A
          call "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
          nmake
        shell: cmd


      - name: Archive built Windows artifacts
        run: |
          Compress-Archive -Path $env:OPENSSL_DIR\* -DestinationPath openssl-windows.zip

